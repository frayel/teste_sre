---
version: '3'
services:

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    restart: always
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka:9092

  consultation:
    build: app_consulta
    command: "/opt/app/start.sh"
    depends_on:
      - postgres
      - kafka
    ports:
      - 8010:8010
    restart: always
    environment:
      KAFKA_URI: kafka:29092
      KAFKA_TOPIC: appointment_done
      API_USERNAME: admin
      API_PASSWORD: teste123
      DEBUG: "false"
      ALLOWED_HOSTS: localhost
      DB_DEFAULT: remote
      DB_USER: postgres
      DB_PASSWORD: pg123
      DB_HOST: postgres

  finance:
    build: app_financas
    command: "/opt/app/start.sh"
    depends_on:
      - postgres
    ports:
      - 8020:8020
    restart: always
    environment:
      API_USERNAME: admin
      API_PASSWORD: teste123
      DEBUG: "false"
      ALLOWED_HOSTS: finance
      DB_DEFAULT: remote
      DB_USER: postgres
      DB_PASSWORD: pg123
      DB_HOST: postgres

  consumer:
    build: queue_consumer
    command: "/opt/app/start.sh"
    depends_on:
      - kafka
      - finance
    environment:
      KAFKA_URI: kafka:29092
      KAFKA_GROUP: processor_1
      KAFKA_TOPIC: appointment_done
      FINANCE_PAYMENT_ENDPOINT: http://finance:8020/app/finance/record/
      API_USERNAME: admin
      API_PASSWORD: teste123
      DEBUG: "false"
      ALLOWED_HOSTS: localhost
      DB_DEFAULT: remote
      DB_USER: postgres
      DB_PASSWORD: pg123
      DB_HOST: postgres

  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: pg123
    ports:
      - 5432:5432


  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    depends_on:
      - kafka
    ports:
      - 19000:9000
    restart: always
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

#  mongo:
#    image: mongo
#    environment:
#      - MONGO_INITDB_DATABASE=clinic
#      - MONGO_INITDB_ROOT_USERNAME=clinic
#      - MONGO_INITDB_ROOT_PASSWORD=pamonha123
#    volumes:
#      - mongodata:/data/db
#    ports:
#      - "27017-27019:27017-27019"
#    restart: always
#
#  nginx:
#    image: nginx:latest
#    ports:
#      - "80:8000"
#    volumes:
#      - ./gateway/nginx:/etc/nginx/conf.d
#    depends_on:
#      - appointment
#      - financial
#    restart: always
#
#volumes:
#  mongodata: